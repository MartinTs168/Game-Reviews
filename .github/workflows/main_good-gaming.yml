# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - good-gaming

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ vars.DEBUG }}
      ALLOWED_HOSTS: ${{secrets.ALLOWED_HOSTS }}
      CSRF_TRUSTED_ORIGINS: ${{secrets.CSRF_TRUSTED_ORIGINS }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_NAME: ${{secrets.DB_NAME }}
      DB_USER: ${{secrets.DB_USER }}
      DB_PASSWORD: ${{secrets.DB_PASSWORD }}
      DB_HOST: ${{secrets.DB_HOST }}
      DB_PORT: ${{secrets.PORT }}
      DJANGO_ADMIN_PASSWORD: ${{secrets.DJANGO_ADMIN_PASSWORD }}
      DJANGO_DEFAULT_EMPLOYEE_PASSWORD: ${{secrets.DJANGO_DEFAULT_EMPLOYEE_PASSWORD }}
      CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET }}
    
    
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up python
        run: uv python install

      - name: Install project dependencies
        run: uv sync --locked --all-extras --dev

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: npm

      - name: Install npm dependencies
        run: npm ci

      - name: Collect static files
        run: uv run python manage.py collectstatic

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            .
            !venv/
            !node_modules/  
  
  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ vars.DEBUG }}
      ALLOWED_HOSTS: ${{secrets.ALLOWED_HOSTS }}
      CSRF_TRUSTED_ORIGINS: ${{secrets.CSRF_TRUSTED_ORIGINS }}
      DB_URL: ${{ secrets.DB_URL }}
      DB_NAME: ${{secrets.DB_NAME }}
      DB_USER: ${{secrets.DB_USER }}
      DB_PASSWORD: ${{secrets.DB_PASSWORD }}
      DB_HOST: ${{secrets.DB_HOST }}
      DB_PORT: ${{secrets.PORT }}
      DJANGO_ADMIN_PASSWORD: ${{secrets.DJANGO_ADMIN_PASSWORD }}
      DJANGO_DEFAULT_EMPLOYEE_PASSWORD: ${{secrets.DJANGO_DEFAULT_EMPLOYEE_PASSWORD }}
      CLOUDINARY_CLOUD_NAME: ${{secrets.CLOUDINARY_CLOUD_NAME }}
      CLOUDINARY_API_KEY: ${{secrets.CLOUDINARY_API_KEY }}
      CLOUDINARY_API_SECRET: ${{secrets.CLOUDINARY_API_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up python
        run: uv python install

      - name: Install project dependencies
        run: uv sync --locked --all-extras --dev

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: npm

      - name: Install npm dependencies
        run: npm ci

      - name: Configure Azure DATABASE_URL
        run: |
          echo "DATABASE_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV

      - name: Run migrations and setup db users
        run: |
          uv run python manage.py migrate --no-input
          uv run python manage.py seed_initial_users

      - name: Collect static files
        run: uv run python manage.py collectstatic

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_52EDF561AE5E467489BDF7A84914C2AF }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_0D8619CEFDDA49CF84C9FA52150708F5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_FBE09729C41A4640BC3DA8E6300C771A }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'good-gaming'
          slot-name: 'Production'
          